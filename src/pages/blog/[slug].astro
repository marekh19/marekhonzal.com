---
import type { GetStaticPaths } from 'astro'
import { getCollection, render } from 'astro:content'

import ArticleHeader from '@/components/Content/ArticleHeader.astro'
import { mdxComponents } from '@/components/MDX/MDXComponents.astro'
import StructuredData from '@/components/Meta/SchemaOrg/Base.astro'
import { createBlogPostSchema } from '@/config/schemaJson'
import { defaultSeo } from '@/config/seo'
import ReadingLayout from '@/layouts/ReadingLayout.astro'
import { raise } from '@/lib/utils/common'
import { shouldIncludeItem } from '@/lib/utils/content'

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog', shouldIncludeItem)

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }))
}) satisfies GetStaticPaths

const { post } = Astro.props
const { Content, headings, remarkPluginFrontmatter } = await render(post)

const { data } = post
const { readingTime } = remarkPluginFrontmatter

const siteUrl = Astro.site ?? raise('Expected "site" to be defined in astro.config.*')
const structuredData = createBlogPostSchema(siteUrl, post, readingTime.words)
---

<ReadingLayout
  pageTitle={defaultSeo.pageTitle(data.title)}
  pageDescription={data.description}
  headings={headings}
>
  <Fragment slot="head">
    <StructuredData schema={structuredData} />
  </Fragment>
  <Fragment slot="contentHeader">
    <ArticleHeader className="mt-5" readingTime={readingTime} {...data} />
  </Fragment>

  <Content components={mdxComponents} />
</ReadingLayout>
