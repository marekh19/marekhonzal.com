---
import type { GetStaticPaths } from 'astro'
import { getAllTags, getPostsByTag } from '@/lib/utils/posts'
import { shouldIncludeItem, getSortedContentByDateDesc } from '@/lib/utils/content'
import { createSlugifiedString } from '@/lib/utils/string'
import { getCollection } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import ArticleGrid from '@/components/Content/ArticleGrid.astro'
import { ROUTES } from '@/config/routes'
import { Icon } from 'astro-icon/components'
import { cn } from '@/lib/utils/cn'
import { defaultSeo } from '@/config/seo'

const meta = {
  title: (tag: string) => `${tag} | Blog | ${defaultSeo.baseTitle}` as const,
  description: (tag: string) =>
    `Articles about ${tag} from Marek Honzal’s blog — frontend insights, architecture tips, and lessons from side projects.`,
} as const

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog', shouldIncludeItem)
  const tags = getAllTags(posts)

  return tags.map((tag) => ({
    params: { tag: createSlugifiedString(tag) },
    props: { tag, posts: getSortedContentByDateDesc(getPostsByTag(posts, tag)) },
  }))
}) satisfies GetStaticPaths

const { tag, posts } = Astro.props
---

<BaseLayout pageTitle={meta.title(tag)} pageDescription={meta.description(tag)}>
  <a
    href={ROUTES.blog._}
    class={cn(
      'link link-hover text-base-content/75 mt-5 inline-flex items-center gap-1 font-medium transition-colors duration-200 ease-out',
      'focus:outline-primary focus:rounded-sm focus:outline-offset-2',
      'hover:text-base-content',
    )}
  >
    <Icon name="lucide:arrow-left" />
    Back to all articles
  </a>
  <div class="mt-5 mb-10 space-y-3">
    <h1 class="text-3xl">
      Articles tagged with &ldquo;<strong class="font-bold">{tag}</strong>&rdquo;
    </h1>
    <h2 class="text-base-content/75 text-lg">
      Browse all posts that are related to {tag}.
    </h2>
  </div>
  <ArticleGrid posts={posts} />
</BaseLayout>
