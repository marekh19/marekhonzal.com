---
import type { GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import { Icon } from 'astro-icon/components'

import ArticleGrid from '@/components/Content/ArticleGrid.astro'
import Link from '@/components/Link.astro'
import { ROUTES } from '@/config/routes'
import { defaultSeo } from '@/config/seo'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getSortedContentByDateDesc, shouldIncludeItem } from '@/lib/utils/content'
import { getAllTags, getPostsByTag } from '@/lib/utils/posts'
import { createSlugifiedString } from '@/lib/utils/string'

const meta = {
  title: (tag: string) => `${tag} | Blog | ${defaultSeo.baseTitle}` as const,
  description: (tag: string) =>
    `Articles about ${tag} from Marek Honzalâ€™s blog - frontend insights, architecture tips, and lessons from side projects.`,
} as const

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog', shouldIncludeItem)
  const tags = getAllTags(posts)

  return tags.map((tag) => ({
    params: { tag: createSlugifiedString(tag) },
    props: { tag, posts: getSortedContentByDateDesc(getPostsByTag(posts, tag)) },
  }))
}) satisfies GetStaticPaths

const { tag, posts } = Astro.props
---

<BaseLayout pageTitle={meta.title(tag)} pageDescription={meta.description(tag)}>
  <Link href={ROUTES.blog._} class="inline-flex items-center gap-1 self-start">
    <Icon name="lucide:arrow-left" class="size-3.5" />
    Blog
  </Link>
  <div class="mt-5 mb-10 space-y-3">
    <h1 class="text-3xl">
      Articles tagged with &ldquo;<strong class="font-bold">{tag}</strong>&rdquo;
    </h1>
    <h2 class="text-base-content/75 text-lg">
      Browse all posts that are related to {tag}.
    </h2>
  </div>
  <ArticleGrid posts={posts} isAboveFold />
</BaseLayout>
